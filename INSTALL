$ git clone https://github.com/ester-project/ester.git

This will create a directory named ester that contains the source code of ESTER. Go to this directory, and create a build directory:

$ cd ester
mkdir build

Configure and check all dependencies are installed

Ensure you are in the build directory and run:

cd build
cmake .. -DCMAKE_INSTALL_PREFIX=$HOME/local

Old installation:

ESTER is available under the GPL Version 3 license. It is hosted either on
on github (https://github.com/ester-project/ester).

To use the last version of the code, you can directly clone the last
development version form Git:

shell$ git clone https://github.com/ester-project/ester.git
shell$ cd ester
shell$ ./bootstrap

Installation of the ESTER binaries and library use the common GNU-based
process:
shell$ ./configure --prefix=...
shell$ make
shell$ make install

You can pass flags to the configure script to tune you installation:
- You can select the libs to use using LIBS:
  For instance if you want to use atlas libraries for blas, cblas and lapack
  libraries, you can use:

  shell$ ./configure LIBS="-L$HOME/local/lib -ltatlas"
  (provided that ATLAS is installed in $HOME/local/lib).

- You can select you Fortran compiler with FC and you c++ compiler with CXX.
- And you can use specific compiler flags with FCFLAGS and CXXFLAGS.

The default prefix is $HOME/local, thus adding $HOME/local/bin to your PATH
environment variable will allow you to run ESTER  without specifying the full
path to the binary.
